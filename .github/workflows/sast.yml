name: SonarCloud - .NET + Python

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar-dotnet:
    name: Build and analyze .NET (auth-service)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17 (required by Sonar)
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Cache Sonar scanner
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install dotnet-sonarscanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path ${{ runner.temp }}\scanner -ItemType Directory
          dotnet tool install --global dotnet-sonarscanner --version 5.* --tool-path ${{ runner.temp }}\scanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          $scanner = "${{ runner.temp }}\scanner\dotnet-sonarscanner"
          & $scanner begin /k:"AndresBarrios18_ProyectoGrado1" /o:"andresbarrios18" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Build auth-service
        working-directory: auth-service
        shell: powershell
        run: |
          dotnet restore
          dotnet build --configuration Release

      # Aquí podrías agregar step para ejecutar tests y generar cobertura
      # por ejemplo: dotnet test --collect:"XPlat Code Coverage"

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          $scanner = "${{ runner.temp }}\scanner\dotnet-sonarscanner"
          & $scanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  sonar-python:
    name: Analyze Python (tasks-service)
    runs-on: ubuntu-latest
    needs: sonar-dotnet
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (required)
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        working-directory: tasks-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: SonarCloud Scan (Python)
        uses: SonarSource/sonarcloud-github-action@master
        with:
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          token: ${{ secrets.SONAR_TOKEN }}
          # optional: projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
